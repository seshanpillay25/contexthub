name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run security checks
      run: npm run security-check

  release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: |
        # Ensure all scripts are executable
        chmod +x setup-ai-tools.sh
        chmod +x setup-ai-tools.py
        chmod +x setup-ai-tools.js

    - name: Get previous tag
      id: prev_tag
      run: |
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT
        echo "Previous tag: $PREV_TAG"

    - name: Get commits since last tag
      id: commits
      run: |
        if [ -n "${{ steps.prev_tag.outputs.prev_tag }}" ]; then
          COMMITS=$(git log --pretty=format:"- %s (%h)" ${{ steps.prev_tag.outputs.prev_tag }}..HEAD)
        else
          COMMITS=$(git log --pretty=format:"- %s (%h)" --max-count=10)
        fi
        
        # Handle multiline output for GitHub Actions
        {
          echo "commits<<EOF"
          echo "$COMMITS"
          echo "EOF"
        } >> $GITHUB_OUTPUT

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## What's Changed
          
          ${{ steps.commits.outputs.commits }}
          
          ## Installation
          
          ```bash
          npm install -g contexthub@${{ github.ref_name }}
          ```
          
          ## Quick Start
          
          ```bash
          cd your-project
          npx contexthub
          # or if installed globally
          contexthub
          ```
          
          ## Documentation
          
          - [Getting Started](https://github.com/seshanpillay25/contexthub/blob/main/README.md#quick-start)
          - [Security Policy](https://github.com/seshanpillay25/contexthub/blob/main/SECURITY.md)
          
          ## Download Setup Scripts
          
          Alternative installation methods are available as release assets below.
        files: |
          setup-ai-tools.sh
          setup-ai-tools.ps1
          setup-ai-tools.py
        draft: false
        prerelease: false